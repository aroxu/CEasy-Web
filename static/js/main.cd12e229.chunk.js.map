{"version":3,"sources":["components/Alert.js","styles/Home.style.js","pages/Home.js","styles/API.style.js","pages/API.js","styles/About.style.js","pages/About.js","styles/header.style.js","styles/PageNotFound.style.js","pages/PageNotFound.js","components/Appbar.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","elevation","variant","homeStyle","theme","button","margin","spacing","input","display","withStyles","classes","severity","Button","color","aria-label","className","Icon","disabled","apiStyle","aboutStyle","headerStyle","root","flexGrow","flex","drawerPaper","position","width","menuButton","marginLeft","marginRight","toolbarMargin","mixins","toolbar","aboveDrawer","zIndex","drawer","pageNotFoundStyle","minWidth","minHeight","flexDirection","justifyContent","card","cardContent","textAlign","alignItems","PageNotFound","Grid","justify","Card","CardContent","Typography","component","size","onClick","document","location","href","Mail","history","createBrowserHistory","HeaderToolbar","title","onMenuClick","useState","Date","toLocaleTimeString","hour12","hour","minute","updateTime","setUpdateTime","darkModeButtonClicked","setDarkModeButtonClicked","handleDarkModeSnackbarClose","event","reason","updateData","a","useEffect","interval","setInterval","clearInterval","AppBar","Toolbar","Tooltip","arrow","IconButton","aria-controls","aria-haspopup","localStorage","getItem","setItem","window","reload","WbSunny","NightsStay","Snackbar","open","autoHideDuration","onClose","HeaderDrawer","onItemClick","onItemClickWithoutUpdate","Drawer","paper","clsx","List","ListItem","Link","to","ListItemIcon","HomeOutlined","ListItemText","BookOutlined","Divider","InfoOutlined","CloseOutlined","content","exact","path","Home","API","About","setDrawer","setTitle","pathname","toggleDrawer","darkModeEnabled","matchMedia","matches","App","palletType","darkTheme","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Appbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cd12e229.chunk.js","sourcesContent":["import MuiAlert from '@material-ui/lab/Alert'\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant='filled' {...props} />\n}\n\nexport default Alert\n","const homeStyle = (theme) => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n})\n\nexport default homeStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport Alert from '../components/Alert'\n\nimport homeStyle from '../styles/Home.style'\n\nconst Home = (props) => {\n  const { classes } = props\n  return (\n    <div>\n      <Alert severity='info'>이 사이트는 아직 개발중입니다.</Alert>\n      <Button\n        variant='contained'\n        color='primary'\n        aria-label='add'\n        className={classes.button}>\n        <AddIcon />\n      </Button>\n      <Button\n        variant='contained'\n        color='secondary'\n        aria-label='edit'\n        className={classes.button}>\n        <Icon>edit_icon</Icon>\n      </Button>\n      <Button\n        variant='contained'\n        disabled\n        aria-label='delete'\n        className={classes.button}>\n        <DeleteIcon />\n      </Button>\n      홈 페이지 테스트\n    </div>\n  )\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(homeStyle)(Home)\n","const apiStyle = (theme) => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n})\n\nexport default apiStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport apiStyle from '../styles/API.style'\n\nconst API = (props) => {\n  const { classes } = props\n  return (\n    <div>\n      <div>\n        <Button\n          variant='contained'\n          color='primary'\n          aria-label='add'\n          className={classes.button}>\n          <AddIcon />\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          aria-label='edit'\n          className={classes.button}>\n          <Icon>edit_icon</Icon>\n        </Button>\n        <Button\n          variant='contained'\n          disabled\n          aria-label='delete'\n          className={classes.button}>\n          <DeleteIcon />\n        </Button>\n        API 페이지 테스트\n      </div>\n    </div>\n  )\n}\n\nAPI.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(apiStyle)(API)\n","const aboutStyle = (theme) => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n})\n\nexport default aboutStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport aboutStyle from '../styles/About.style'\n\nconst About = (props) => {\n  const { classes } = props\n  return (\n    <div>\n      <div>\n        <Button\n          variant='contained'\n          color='primary'\n          aria-label='add'\n          className={classes.button}>\n          <AddIcon />\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          aria-label='edit'\n          className={classes.button}>\n          <Icon>edit_icon</Icon>\n        </Button>\n        <Button\n          variant='contained'\n          disabled\n          aria-label='delete'\n          className={classes.button}>\n          <DeleteIcon />\n        </Button>\n        정보 페이지 테스트\n      </div>\n    </div>\n  )\n}\n\nAbout.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(aboutStyle)(About)\n","const drawerWidth = 240\n\nconst headerStyle = (theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  aboveDrawer: {\n    zIndex: theme.zIndex.drawer + 1\n  }\n})\n\nexport default headerStyle\n","const pageNotFoundStyle = (theme) => ({\n  root: {\n    minWidth: '100%',\n    minHeight: 'calc(100vh - 198px)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  card: {\n    width: '50vw',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  cardContent: {\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n\nexport default pageNotFoundStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport pageNotFoundStyle from '../styles/PageNotFound.style'\nimport { Button, Card, CardContent, Grid, Typography } from '@material-ui/core'\nimport Alert from '../components/Alert'\nimport { Home, Mail } from '@material-ui/icons'\n\nconst PageNotFound = withStyles(pageNotFoundStyle)(({ classes }) => {\n  const goToHome = () => {\n    document.location.href = '/'\n  }\n\n  const sendMail = () => {\n    document.location.href = 'mailto:zeus8502@gmail.com'\n  }\n\n  return (\n    <>\n      <Alert severity='error'>페이지를 찾을 수 없습니다.</Alert>\n      <Grid\n        className={classes.root}\n        spacing={0}\n        alignItems='center'\n        justify='center'>\n        <Card className={classes.card} variant='outlined'>\n          <CardContent className={classes.cardContent}>\n            <Typography variant='h5' component='h2'>\n              음.. 뭔가가 잘못된 것 같네요.\n            </Typography>\n            <Typography variant='body1' component='h3'>\n              잘못 찾아왔다면 홈으로 가는건 어떤가요?\n            </Typography>\n            <Typography variant='body1' component='h3'>\n              만약 개발자가 잘못 작업 한 것 같다면 문의하기 버튼을 눌러주세요.\n            </Typography>\n            <Button size='small' onClick={goToHome}>\n              <Home />\n              홈으로 가기\n            </Button>\n            <Button size='small' onClick={sendMail}>\n              <Mail />\n              문의하기\n            </Button>\n          </CardContent>\n        </Card>\n      </Grid>\n    </>\n  )\n})\n\nPageNotFound.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(pageNotFoundStyle)(PageNotFound)\n","import React, { useState, Fragment, useEffect } from 'react'\nimport clsx from 'clsx'\nimport { Route, Link, BrowserRouter, Switch } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport Home from '../pages/Home'\nimport API from '../pages/API'\nimport About from '../pages/About'\n\nimport headerStyle from '../styles/header.style'\nimport {\n  BookOutlined,\n  CloseOutlined,\n  HomeOutlined,\n  InfoOutlined,\n  NightsStay,\n  WbSunny\n} from '@material-ui/icons'\nimport { Divider, Snackbar, Tooltip } from '@material-ui/core'\nimport PageNotFound from '../pages/PageNotFound'\nimport Alert from './Alert'\n\nconst history = createBrowserHistory()\n\nconst HeaderToolbar = withStyles(headerStyle)(\n  ({ classes, title, onMenuClick }) => {\n    const [updateTime, setUpdateTime] = useState(\n      `${new Date().toLocaleTimeString('ko-KR', {\n        hour12: true,\n        hour: 'numeric',\n        minute: 'numeric'\n      })}`\n    )\n    const [darkModeButtonClicked, setDarkModeButtonClicked] = useState(false)\n\n    const handleDarkModeSnackbarClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return\n      }\n      setDarkModeButtonClicked(false)\n    }\n\n    const refreshRate = 60000 // 1분마다 업데이트\n\n    const updateData = async () => {\n      setUpdateTime(\n        `${new Date().toLocaleTimeString('ko-KR', {\n          hour12: true,\n          hour: 'numeric',\n          minute: 'numeric'\n        })}`\n      )\n    }\n\n    const toggleDarkMode = () => {\n      setDarkModeButtonClicked(true)\n      if (localStorage.getItem('darkmode') === 'true') {\n        localStorage.setItem('darkmode', false)\n      } else {\n        localStorage.setItem('darkmode', true)\n      }\n      window.location.reload()\n    }\n\n    useEffect(() => {\n      const interval = setInterval(updateData, refreshRate)\n      return () => clearInterval(interval)\n    }, [refreshRate])\n\n    return (\n      <Fragment>\n        <AppBar className={classes.aboveDrawer}>\n          <Toolbar>\n            <Tooltip title='메뉴' arrow>\n              <IconButton\n                className={classes.menuButton}\n                color='inherit'\n                aria-label='Menu'\n                onClick={onMenuClick}>\n                <MenuIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant='h6' color='inherit' className={classes.flex}>\n              {title}\n            </Typography>\n            <Typography variant='subtitle2' color='inherit'>\n              {`${updateTime}`}에 업데이트 됨\n            </Typography>\n            <div>\n              <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={toggleDarkMode}\n                color='inherit'>\n                {localStorage.getItem('darkmode') === 'true' ? (\n                  <WbSunny />\n                ) : (\n                  <NightsStay />\n                )}\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.toolbarMargin} />\n        <Snackbar\n          open={darkModeButtonClicked}\n          autoHideDuration={6000}\n          onClose={handleDarkModeSnackbarClose}>\n          <Alert onClose={handleDarkModeSnackbarClose} severity='success'>\n            테마 변경 및 적용중...\n          </Alert>\n        </Snackbar>\n      </Fragment>\n    )\n  }\n)\n\nconst HeaderDrawer = withStyles(headerStyle)(\n  ({\n    classes,\n    variant,\n    open,\n    onClose,\n    onItemClick,\n    onItemClickWithoutUpdate\n  }) => (\n    <BrowserRouter history={history}>\n      <Drawer\n        variant={variant}\n        open={open}\n        onClose={onClose}\n        classes={{\n          paper: classes.drawerPaper\n        }}>\n        <div\n          className={clsx({\n            [classes.toolbarMargin]: variant === 'persistent'\n          })}\n        />\n        <List>\n          <ListItem button component={Link} to='/' onClick={onItemClick('홈')}>\n            <ListItemIcon>\n              <HomeOutlined />\n            </ListItemIcon>\n            <ListItemText>홈</ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to='/api'\n            onClick={onItemClick('API 문서')}>\n            <ListItemIcon>\n              <BookOutlined />\n            </ListItemIcon>\n            <ListItemText>API 문서</ListItemText>\n          </ListItem>\n          <Divider />\n          <ListItem\n            button\n            component={Link}\n            to='/about'\n            onClick={onItemClick('정보')}>\n            <ListItemIcon>\n              <InfoOutlined />\n            </ListItemIcon>\n            <ListItemText>정보</ListItemText>\n          </ListItem>\n          <Divider />\n          <ListItem button onClick={onItemClickWithoutUpdate()}>\n            <ListItemIcon>\n              <CloseOutlined />\n            </ListItemIcon>\n            <ListItemText>메뉴 닫기</ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/api' component={API} />\n          <Route path='/about' component={About} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </main>\n    </BrowserRouter>\n  )\n)\n\nconst HeaderAppBarInteraction = ({ classes, variant }) => {\n  const [drawer, setDrawer] = useState(false)\n  const [title, setTitle] = useState()\n\n  useEffect(() => {\n    if (window.location.pathname === '/') {\n      setTitle('홈')\n    } else if (window.location.pathname === '/api') {\n      setTitle('API 문서')\n    } else if (window.location.pathname === '/about') {\n      setTitle('정보')\n    } else {\n      setTitle('404')\n    }\n  }, [])\n\n  const toggleDrawer = () => {\n    setDrawer(!drawer)\n  }\n\n  const onItemClick = (title) => () => {\n    setTitle(title)\n    setDrawer(variant === 'temporary' ? false : drawer)\n    setDrawer(!drawer)\n  }\n\n  const onItemClickWithoutUpdate = () => () => {\n    setDrawer(variant === 'temporary' ? false : drawer)\n    setDrawer(!drawer)\n  }\n\n  return (\n    <div className={classes.root}>\n      <HeaderToolbar title={title} onMenuClick={toggleDrawer} />\n      <HeaderDrawer\n        open={drawer}\n        onClose={toggleDrawer}\n        onItemClick={onItemClick}\n        onItemClickWithoutUpdate={onItemClickWithoutUpdate}\n        variant={variant}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(headerStyle)(HeaderAppBarInteraction)\n","import React from 'react'\n\nimport './App.css'\nimport Appbar from './components/Appbar.js'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nlet darkModeEnabled = localStorage.getItem('darkmode')\n\nif (darkModeEnabled === null) {\n  if (\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  ) {\n    localStorage.setItem('darkmode', true)\n    darkModeEnabled = 'true'\n  } else {\n    localStorage.setItem('darkmode', false)\n    darkModeEnabled = 'false'\n  }\n}\n\nconst App = () => {\n  const palletType = darkModeEnabled === 'true' ? 'dark' : 'light'\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType\n    }\n  })\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <>\n        <CssBaseline />\n        <Appbar />\n      </>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}