{"version":3,"sources":["styles/Home.style.js","pages/Home.js","styles/API.style.js","pages/API.js","styles/About.style.js","pages/About.js","styles/header.style.js","components/Appbar.js","App.js","reportWebVitals.js","index.js"],"names":["homeStyle","theme","button","margin","spacing","input","display","withStyles","props","classes","Button","variant","color","aria-label","className","Icon","disabled","apiStyle","aboutStyle","headerStyle","root","flexGrow","flex","drawerPaper","position","width","menuButton","marginLeft","marginRight","toolbarMargin","mixins","toolbar","aboveDrawer","zIndex","drawer","history","createBrowserHistory","HeaderToolbar","title","onMenuClick","useState","Date","toLocaleTimeString","hour12","hour","minute","updateTime","setUpdateTime","darkModeButtonClicked","setDarkModeButtonClicked","handleDarkModeSnackbarClose","event","reason","updateData","a","useEffect","interval","setInterval","clearInterval","AppBar","Toolbar","Tooltip","arrow","IconButton","onClick","Typography","aria-controls","aria-haspopup","localStorage","getItem","setItem","window","location","reload","WbSunny","NightsStay","Snackbar","open","autoHideDuration","onClose","Alert","severity","HeaderDrawer","onItemClick","onItemClickWithoutUpdate","Drawer","paper","clsx","List","ListItem","component","Link","to","ListItemIcon","HomeOutlined","ListItemText","BookOutlined","Divider","InfoOutlined","CloseOutlined","content","exact","path","Home","API","About","setDrawer","setTitle","pathname","toggleDrawer","darkModeEnabled","matchMedia","matches","App","palletType","darkTheme","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Appbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.814e10b4.chunk.js","sourcesContent":["const homeStyle = (theme) => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n})\n\nexport default homeStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport homeStyle from '../styles/Home.style'\n\nconst FlatButtons = (props) => {\n  const { classes } = props\n  return (\n    <div>\n      <div>\n        <Button\n          variant='contained'\n          color='primary'\n          aria-label='add'\n          className={classes.button}>\n          <AddIcon />\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          aria-label='edit'\n          className={classes.button}>\n          <Icon>edit_icon</Icon>\n        </Button>\n        <Button\n          variant='contained'\n          disabled\n          aria-label='delete'\n          className={classes.button}>\n          <DeleteIcon />\n        </Button>\n        홈 페이지 테스트\n      </div>\n    </div>\n  )\n}\n\nFlatButtons.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(homeStyle)(FlatButtons)\n","const apiStyle = (theme) => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n})\n\nexport default apiStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport apiStyle from '../styles/API.style'\n\nconst FlatButtons = (props) => {\n  const { classes } = props\n  return (\n    <div>\n      <div>\n        <Button\n          variant='contained'\n          color='primary'\n          aria-label='add'\n          className={classes.button}>\n          <AddIcon />\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          aria-label='edit'\n          className={classes.button}>\n          <Icon>edit_icon</Icon>\n        </Button>\n        <Button\n          variant='contained'\n          disabled\n          aria-label='delete'\n          className={classes.button}>\n          <DeleteIcon />\n        </Button>\n        API 페이지 테스트\n      </div>\n    </div>\n  )\n}\n\nFlatButtons.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(apiStyle)(FlatButtons)\n","const aboutStyle = (theme) => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n})\n\nexport default aboutStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport aboutStyle from '../styles/About.style'\n\nconst FlatButtons = (props) => {\n  const { classes } = props\n  return (\n    <div>\n      <div>\n        <Button\n          variant='contained'\n          color='primary'\n          aria-label='add'\n          className={classes.button}>\n          <AddIcon />\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          aria-label='edit'\n          className={classes.button}>\n          <Icon>edit_icon</Icon>\n        </Button>\n        <Button\n          variant='contained'\n          disabled\n          aria-label='delete'\n          className={classes.button}>\n          <DeleteIcon />\n        </Button>\n        정보 페이지 테스트\n      </div>\n    </div>\n  )\n}\n\nFlatButtons.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(aboutStyle)(FlatButtons)\n","const drawerWidth = 240\n\nconst headerStyle = (theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  aboveDrawer: {\n    zIndex: theme.zIndex.drawer + 1\n  }\n})\n\nexport default headerStyle\n","import React, { useState, Fragment, useEffect } from 'react'\nimport clsx from 'clsx'\nimport { Router, Route, Link } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Alert from '@material-ui/lab/Alert'\n\nimport Home from '../pages/Home'\nimport API from '../pages/API'\nimport About from '../pages/About'\n\nimport headerStyle from '../styles/header.style'\nimport {\n  BookOutlined,\n  CloseOutlined,\n  HomeOutlined,\n  InfoOutlined,\n  NightsStay,\n  WbSunny\n} from '@material-ui/icons'\nimport { Divider, Snackbar, Tooltip } from '@material-ui/core'\n\nconst history = createBrowserHistory()\n\nconst HeaderToolbar = withStyles(headerStyle)(\n  ({ classes, title, onMenuClick }) => {\n    const [updateTime, setUpdateTime] = useState(\n      `${new Date().toLocaleTimeString('ko-KR', {\n        hour12: true,\n        hour: 'numeric',\n        minute: 'numeric'\n      })}`\n    )\n    const [darkModeButtonClicked, setDarkModeButtonClicked] = useState(false)\n\n    const handleDarkModeSnackbarClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return\n      }\n      setDarkModeButtonClicked(false)\n    }\n\n    const refreshRate = 60000 // 1분마다 업데이트\n\n    const updateData = async () => {\n      setUpdateTime(\n        `${new Date().toLocaleTimeString('ko-KR', {\n          hour12: true,\n          hour: 'numeric',\n          minute: 'numeric'\n        })}`\n      )\n    }\n\n    const toggleDarkMode = () => {\n      setDarkModeButtonClicked(true)\n      if (localStorage.getItem('darkmode') === 'true') {\n        localStorage.setItem('darkmode', false)\n      } else {\n        localStorage.setItem('darkmode', true)\n      }\n      window.location.reload()\n    }\n\n    useEffect(() => {\n      const interval = setInterval(updateData, refreshRate)\n      return () => clearInterval(interval)\n    }, [refreshRate])\n\n    return (\n      <Fragment>\n        <AppBar className={classes.aboveDrawer}>\n          <Toolbar>\n            <Tooltip title='메뉴' arrow>\n              <IconButton\n                className={classes.menuButton}\n                color='inherit'\n                aria-label='Menu'\n                onClick={onMenuClick}>\n                <MenuIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant='h6' color='inherit' className={classes.flex}>\n              {title}\n            </Typography>\n            <Typography variant='subtitle2' color='inherit'>\n              {`${updateTime}`}에 업데이트 됨\n            </Typography>\n            <div>\n              <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={toggleDarkMode}\n                color='inherit'>\n                {localStorage.getItem('darkmode') === 'true' ? (\n                  <WbSunny />\n                ) : (\n                  <NightsStay />\n                )}\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.toolbarMargin} />\n        <Snackbar\n          open={darkModeButtonClicked}\n          autoHideDuration={6000}\n          onClose={handleDarkModeSnackbarClose}>\n          <Alert onClose={handleDarkModeSnackbarClose} severity='success'>\n            테마 변경 및 적용중...\n          </Alert>\n        </Snackbar>\n      </Fragment>\n    )\n  }\n)\n\nconst HeaderDrawer = withStyles(headerStyle)(\n  ({\n    classes,\n    variant,\n    open,\n    onClose,\n    onItemClick,\n    onItemClickWithoutUpdate\n  }) => (\n    <Router history={history}>\n      <Drawer\n        variant={variant}\n        open={open}\n        onClose={onClose}\n        classes={{\n          paper: classes.drawerPaper\n        }}>\n        <div\n          className={clsx({\n            [classes.toolbarMargin]: variant === 'persistent'\n          })}\n        />\n        <List>\n          <ListItem button component={Link} to='/' onClick={onItemClick('홈')}>\n            <ListItemIcon>\n              <HomeOutlined />\n            </ListItemIcon>\n            <ListItemText>홈</ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to='/api'\n            onClick={onItemClick('API 문서')}>\n            <ListItemIcon>\n              <BookOutlined />\n            </ListItemIcon>\n            <ListItemText>API 문서</ListItemText>\n          </ListItem>\n          <Divider />\n          <ListItem\n            button\n            component={Link}\n            to='/about'\n            onClick={onItemClick('정보')}>\n            <ListItemIcon>\n              <InfoOutlined />\n            </ListItemIcon>\n            <ListItemText>정보</ListItemText>\n          </ListItem>\n          <Divider />\n          <ListItem button onClick={onItemClickWithoutUpdate()}>\n            <ListItemIcon>\n              <CloseOutlined />\n            </ListItemIcon>\n            <ListItemText>메뉴 닫기</ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <Route exact path='/' component={Home} />\n        <Route path='/api' component={API} />\n        <Route path='/about' component={About} />\n      </main>\n    </Router>\n  )\n)\n\nconst HeaderAppBarInteraction = ({ classes, variant }) => {\n  const [drawer, setDrawer] = useState(false)\n  const [title, setTitle] = useState()\n\n  useEffect(() => {\n    if (window.location.pathname === '/') {\n      setTitle('홈')\n    }\n    if (window.location.pathname === '/api') {\n      setTitle('API 문서')\n    }\n    if (window.location.pathname === '/about') {\n      setTitle('정보')\n    }\n  }, [])\n\n  const toggleDrawer = () => {\n    setDrawer(!drawer)\n  }\n\n  const onItemClick = (title) => () => {\n    setTitle(title)\n    setDrawer(variant === 'temporary' ? false : drawer)\n    setDrawer(!drawer)\n  }\n\n  const onItemClickWithoutUpdate = () => () => {\n    setDrawer(variant === 'temporary' ? false : drawer)\n    setDrawer(!drawer)\n  }\n\n  return (\n    <div className={classes.root}>\n      <HeaderToolbar title={title} onMenuClick={toggleDrawer} />\n      <HeaderDrawer\n        open={drawer}\n        onClose={toggleDrawer}\n        onItemClick={onItemClick}\n        onItemClickWithoutUpdate={onItemClickWithoutUpdate}\n        variant={variant}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(headerStyle)(HeaderAppBarInteraction)\n","import React from 'react'\n\nimport './App.css'\nimport Appbar from './components/Appbar.js'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nlet darkModeEnabled = localStorage.getItem('darkmode')\n\nif (darkModeEnabled === null) {\n  if (\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  ) {\n    localStorage.setItem('darkmode', true)\n    darkModeEnabled = 'true'\n  } else {\n    localStorage.setItem('darkmode', false)\n    darkModeEnabled = 'false'\n  }\n}\n\nconst App = () => {\n  const palletType = darkModeEnabled === 'true' ? 'dark' : 'light'\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType\n    }\n  })\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <>\n        <CssBaseline />\n        <Appbar />\n      </>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}